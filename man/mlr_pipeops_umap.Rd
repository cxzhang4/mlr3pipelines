% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpUMAP.R
\name{mlr_pipeops_umap}
\alias{mlr_pipeops_umap}
\alias{PipeOpUMAP}
\title{Uniform Manifold Approximation and Projection (UMAP)}
\format{
\code{\link{R6Class}} object inheriting from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}
\description{
Carry out dimensionality reduction of a dataset using the Uniform Manifold Approximation and Projection (UMAP).
See \code{\link[uwot:umap2]{uwot::umap2()}} for details.
}
\section{Construction}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{PipeOpUMAP$new(id = "umap", param_vals = list())
}\if{html}{\out{</div>}}
\itemize{
\item \code{id} :: \code{character(1)}\cr
Identifier of resulting object, default \code{"umap"}.
\item \code{param_vals} :: named \code{list}\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would otherwise be set during construction. Default \code{list()}.
}
}

\section{Input and Output Channels}{

Input and output channels are inherited from \code{\link{PipeOpTaskPreproc}}.

The output is the input \code{\link[mlr3:Task]{Task}} with all affected numeric features replaced by their principal components.
}

\section{State}{

The \verb{$state} is a named \code{list} with the \verb{$state} elements inherited from \code{\link{PipeOpTaskPreproc}}, as well as the elements of the class \link[stats:prcomp]{stats::prcomp},
with the exception of the \verb{$x} slot. These are in particular:
\itemize{
\item \code{sdev} :: \code{numeric}\cr
The standard deviations of the principal components.
\item \code{rotation} :: \code{matrix}\cr
The matrix of variable loadings.
\item \code{center} :: \code{numeric} | \code{logical(1)}\cr
The centering used, or \code{FALSE}.
\item \code{scale} :: \code{numeric} | \code{logical(1)}\cr
The scaling used, or \code{FALSE}.
}
}

\section{Parameters}{

The parameters are the parameters inherited from \code{\link{PipeOpTaskPreproc}}, as well as:
\itemize{
\item \code{n_neighbors} :: \code{integer(1)}\cr
The size of the neighborhood used for manifold approximation. Default is \code{15}.
\item \code{n_components} :: \code{integer(1)}\cr
The dimension of the space to embed into. Default is \code{2}.
\item \code{metric} :: \code{character(1)}\cr
Type of distance metric to use to find nearest neighbors. Default is \code{"euclidean"}.
\item \code{n_epochs} :: \code{integer(1)}\cr
Number of epochs to use during the optimization of the embedded coordinates.
By default, this value is set to 500 for datasets containing 10,000 vertices or less,
and 200 otherwise. If n_epochs = 0, then coordinates determined by "init" will be returned.
\item \code{learning_rate} :: \code{numeric(1)}\cr
Initial learning rate used in optimization of the coordinates. Default is \code{1}.
\item \code{init} :: \code{character(1)} | \code{matrix}\cr
Type of initialization for the coordinates. Default is \code{"spectral"}.
\item \code{init_sdev} :: \code{character(1)} | \code{numeric(1)}\cr
Scales each dimension of the initialized coordinates to this standard deviation.
Default is \code{"range"}.
\item \code{spread} :: \code{numeric(1)}\cr
The effective scale of embedded points. In combination with \code{min_dist},
this determines how clustered/clumped the embedded points are. Default is \code{1}.
\item \code{min_dist} :: \code{numeric(1)}\cr
The effective minimum distance between embedded points. Default is \code{0.01}.
\item \code{set_op_mix_ratio} :: \code{numeric(1)}\cr
Interpolate between (fuzzy) union and intersection as the set operation used to
combine local fuzzy simplicial sets to obtain a global fuzzy simplicial sets. Default is \code{1}.
\item \code{local_connectivity} :: \code{numeric(1)}\cr
The local connectivity required â€“ i.e. the number of nearest neighbors that should be
assumed to be connected at a local level. Default is \code{1}.
\item \code{bandwidth} :: \code{numeric(1)}\cr
The effective bandwidth of the kernel if we view the algorithm as similar to Laplacian Eigenmaps.
Default is \code{1}.
\item \code{repulsion_strength} :: \code{numeric(1)}\cr
Weighting applied to negative samples in low dimensional embedding optimization.
Values higher than one will result in greater weight being given to negative samples.
Default is \code{1}.
\item \code{negative_sample_rate} :: \code{numeric(1)}\cr
The number of negative edge/1-simplex samples to use per positive edge/1-simplex sample
in optimizing the low dimensional embedding. Default is \code{5}.
\item \code{a} :: \code{any}\cr
More specific parameters controlling the embedding.
If \code{NULL} these values are set automatically as determined by \code{min_dist} and \code{spread}.
Default is \code{NULL}.
\item \code{b} :: \code{any}\cr
More specific parameters controlling the embedding.
If \code{NULL} these values are set automatically as determined by \code{min_dist} and \code{spread}.
Default is \code{NULL}.
\item \code{nn_method} :: \code{character(1)} | named \code{list()} | matrix\cr
Method for finding nearest neighbors. Default is \code{NULL}.
\item \code{n_trees} :: \code{integer(1)}\cr
Number of trees to build when constructing the nearest neighbor index. Default is \code{50}.
\item \code{search_k} :: \code{integer(1)}\cr
Number of nodes to search during the neighbor retrieval.
\item \code{approx_pow} :: \code{logical(1)}\cr
If \code{TRUE}, use an approximation to the power function in the UMAP gradient.
Ignored if \code{dens_scale} is non-NULL. Default is \code{FALSE}.
\item \code{y} :: \code{character(1)}\cr
Default is \code{NULL}.
\item \code{target_n_neighbors} :: \code{integer(1)}\cr
Number of nearest neighbors to use to construct the target simplicial set. Default is \code{NULL}.
\item \code{target_metric} :: \code{character(1)}\cr
The metric used to measure distance for \code{y} if using supervised dimension reduction.
Used only if \code{y} is numeric.
\item \code{target_weight} :: \code{numeric(1)}\cr
Weighting factor between data topology and target topology. Default is \code{0.5}.
\item \code{pca} :: \code{integer(1)}\cr
Default is \code{NULL}.
\item \code{pca_center} :: \code{logical(1)}\cr
If \code{TRUE}, center the columns of X before carrying out PCA.
For binary data, it's recommended to set this to \code{FALSE}. Default is \code{TRUE}.
\item \code{pca_rand} :: \code{logical(1)}\cr
Default is \code{TRUE}.
\item \code{fast_sgd} :: \code{logical(1)}\cr
Default is \code{FALSE}.
\item \code{n_threads} :: \code{integer(1)}\cr
Default is \code{NULL}.
\item \code{n_sgd_threads} :: \code{integer(1)}\cr
Default is \code{0}.
\item \code{grain_size} :: \code{integer(1)}\cr
Default is \code{1}.
\item \code{verbose} :: \code{logical(1)}\cr
Should details be logged to the console? Initialzed to \code{FALSE}.
\item \code{batch} :: \code{logical(1)}\cr
Default is \code{FALSE}.
\item \code{opt_args} :: named \code{list()}\cr
Default is \code{NULL}.
\item \code{epoch_callback} :: \code{function}\cr
Default is \code{NULL}.
\item \code{pca_method} :: \code{character(1)}\cr
Default is \code{NULL}.
\item \code{binary_edge_weights} :: \code{logical(1)}\cr
Default is \code{FALSE}.
\item \code{dens_scale} :: \code{numeric(1)}\cr
Default is \code{NULL}.
\item \code{seed} :: \code{integer(1)}\cr
Default is \code{NULL}.
\item \code{nn_args} :: named \code{list()}\cr
Default is \code{NULL}.
}
}

\section{Internals}{

Uses the \code{\link[uwot:umap]{umap()}} function.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOpTaskPreproc}}/\code{\link{PipeOp}}.
}

\examples{
library("mlr3")

task = tsk("iris")
pop = po("umap")

task$data()
pop$train(list(task))[[1]]$data()

pop$state
}
\seealso{
https://mlr-org.com/pipeops.html

Other PipeOps: 
\code{\link{PipeOp}},
\code{\link{PipeOpEnsemble}},
\code{\link{PipeOpImpute}},
\code{\link{PipeOpTargetTrafo}},
\code{\link{PipeOpTaskPreproc}},
\code{\link{PipeOpTaskPreprocSimple}},
\code{\link{mlr_pipeops}},
\code{\link{mlr_pipeops_boxcox}},
\code{\link{mlr_pipeops_branch}},
\code{\link{mlr_pipeops_chunk}},
\code{\link{mlr_pipeops_classbalancing}},
\code{\link{mlr_pipeops_classifavg}},
\code{\link{mlr_pipeops_classweights}},
\code{\link{mlr_pipeops_colapply}},
\code{\link{mlr_pipeops_collapsefactors}},
\code{\link{mlr_pipeops_colroles}},
\code{\link{mlr_pipeops_copy}},
\code{\link{mlr_pipeops_datefeatures}},
\code{\link{mlr_pipeops_encode}},
\code{\link{mlr_pipeops_encodeimpact}},
\code{\link{mlr_pipeops_encodelmer}},
\code{\link{mlr_pipeops_featureunion}},
\code{\link{mlr_pipeops_filter}},
\code{\link{mlr_pipeops_fixfactors}},
\code{\link{mlr_pipeops_histbin}},
\code{\link{mlr_pipeops_ica}},
\code{\link{mlr_pipeops_imputeconstant}},
\code{\link{mlr_pipeops_imputehist}},
\code{\link{mlr_pipeops_imputelearner}},
\code{\link{mlr_pipeops_imputemean}},
\code{\link{mlr_pipeops_imputemedian}},
\code{\link{mlr_pipeops_imputemode}},
\code{\link{mlr_pipeops_imputeoor}},
\code{\link{mlr_pipeops_imputesample}},
\code{\link{mlr_pipeops_kernelpca}},
\code{\link{mlr_pipeops_learner}},
\code{\link{mlr_pipeops_missind}},
\code{\link{mlr_pipeops_modelmatrix}},
\code{\link{mlr_pipeops_multiplicityexply}},
\code{\link{mlr_pipeops_multiplicityimply}},
\code{\link{mlr_pipeops_mutate}},
\code{\link{mlr_pipeops_nmf}},
\code{\link{mlr_pipeops_nop}},
\code{\link{mlr_pipeops_ovrsplit}},
\code{\link{mlr_pipeops_ovrunite}},
\code{\link{mlr_pipeops_pca}},
\code{\link{mlr_pipeops_proxy}},
\code{\link{mlr_pipeops_quantilebin}},
\code{\link{mlr_pipeops_randomprojection}},
\code{\link{mlr_pipeops_randomresponse}},
\code{\link{mlr_pipeops_regravg}},
\code{\link{mlr_pipeops_removeconstants}},
\code{\link{mlr_pipeops_renamecolumns}},
\code{\link{mlr_pipeops_replicate}},
\code{\link{mlr_pipeops_scale}},
\code{\link{mlr_pipeops_scalemaxabs}},
\code{\link{mlr_pipeops_scalerange}},
\code{\link{mlr_pipeops_select}},
\code{\link{mlr_pipeops_smote}},
\code{\link{mlr_pipeops_spatialsign}},
\code{\link{mlr_pipeops_subsample}},
\code{\link{mlr_pipeops_targetinvert}},
\code{\link{mlr_pipeops_targetmutate}},
\code{\link{mlr_pipeops_targettrafoscalerange}},
\code{\link{mlr_pipeops_textvectorizer}},
\code{\link{mlr_pipeops_threshold}},
\code{\link{mlr_pipeops_tunethreshold}},
\code{\link{mlr_pipeops_unbranch}},
\code{\link{mlr_pipeops_updatetarget}},
\code{\link{mlr_pipeops_vtreat}},
\code{\link{mlr_pipeops_yeojohnson}}
}
\concept{PipeOps}
